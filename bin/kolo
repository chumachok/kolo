#!/usr/bin/env ruby
require_relative "../lib/kolo"
require "optparse"

options = {
  config_file: nil,
  template_dir: nil
}

option_parser = OptionParser.new do |opts|
  opts.banner = "usage: kolo new app_name [options]"

  opts.on("--config_file path", "specify path to configuration file") do |path|
    options[:config_file] = path
  end

  opts.on("--template_dir path", "specify path to template directory") do |path|
    options[:template_dir] = path
  end
end

option_parser.parse!

ARGV.size == 2 or ($stderr.puts option_parser.banner; exit(1))

def handle_error(message)
  $stderr.puts message
  exit(1)
end

begin
  Kolo::CLI.new(command: ARGV[0], app_name: ARGV[1], options: options).call
rescue Kolo::InvalidCommandError
  handle_error(option_parser.banner)
rescue Kolo::InvalidInputError => e
  handle_error(e.message)
rescue Kolo::InvalidConfigurationError => e
  handle_error(e.message)
rescue Kolo::AppExistsError => e
  handle_error(e.message)
rescue Kolo::TemplateError => e
  handle_error(e.message)
end

